apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: springboot-app
  name: springboot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - springboot-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: my-springboot-app
        image: 637423318618.dkr.ecr.ap-south-1.amazonaws.com/weatherapp:build-509d0b3c-ee9c-42b9-b3dd-c69ca1bb988b
        imagePullPolicy: Always
        ports:
        - containerPort: 8085
          name: http
          protocol: TCP
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        resources:
          requests:
            cpu: "100m"  # Modify CPU request based on your application's requirements
            memory: "128Mi"  # Modify memory request based on your application's requirements
          limits:
            cpu: "500m"  # Modify CPU limit based on your application's requirements
            memory: "256Mi"  # Modify memory limit based on your application's requirements
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  type: LoadBalancer
  selector:
    app: springboot-app
